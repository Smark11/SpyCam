<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>th-TH</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>กล้องนักสืบ</value>
  </data>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>เพิ่ม</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>เมนู</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>ขั้นตอนที่ 1: ถ้าคุณยังไม่ได้ถ่ายหน้าจอภาพบนโทรศัพท์ของคุณ คุณจะต้องใช้จอจะใช้เป็นปุ่มชัตเตอร์กล้องสายลับ  ใช้จอ กดปุ่ม home และปุ่มในเวลาเดียวกัน  คุณสามารถใช้จอจากหน้าจอของโปรแกรมประยุกต์ใด ๆ บนโทรศัพท์ของคุณ</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>ขั้นตอนที่ 2: ไปหน้าจอการตั้งค่าคอนฟิก  เลือกภาพที่คุณต้องการใช้เป็นพื้นหลังของปุ่มเพื่อถ่ายภาพ  นอกจากนี้คุณยังสามารถกำหนดค่าการตั้งค่ากล้องอื่น ๆ บนหน้าจอนี้</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>ขั้นตอนที่ 3: ไปที่หน้าจอหลัก  ขณะนี้คุณควรดูภาพหน้าจอของคุณ  เพียงแตะหน้าจอเพื่อถ่ายภาพ นี้มักใช้เวลาประมาณ 1.5 วินาทีขึ้นอยู่กับการตั้งค่าโฟกัส เป็นโทรศัพท์ที่คุณเอง</value>
  </data>
  <data name="Step4" xml:space="preserve">
    <value>ขั้นตอนที่ 4: เมื่อต้องการดูรูปภาพของคุณ เคาะ และเลื่อน ไปทางซ้าย หรือขวา บนหน้าจอหลัก  รูปภาพของคุณจะถูกเก็บไว้ในไลบรารีสื่อของคุณ</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>เกี่ยวกับ</value>
  </data>
  <data name="BackCamera" xml:space="preserve">
    <value>กล้องหลัง</value>
  </data>
  <data name="BuyNow" xml:space="preserve">
    <value>ซื้อตอนนี้</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>ตั้งค่าคอนฟิก</value>
  </data>
  <data name="ExtendTrial" xml:space="preserve">
    <value>ขยายการทดลองจาก 3 วันเป็น 10 วัน อัตรานี้ app 5 ดาว และความคิดเห็นในเชิงบวก</value>
  </data>
  <data name="FlashOff" xml:space="preserve">
    <value>ปิดแฟลช</value>
  </data>
  <data name="FlashOn" xml:space="preserve">
    <value>แฟลชบน</value>
  </data>
  <data name="FocusOff" xml:space="preserve">
    <value>เน้นออก</value>
  </data>
  <data name="FocusOn" xml:space="preserve">
    <value>เน้น</value>
  </data>
  <data name="FrontCamera" xml:space="preserve">
    <value>กล้องด้านหน้า</value>
  </data>
  <data name="ImagePreview" xml:space="preserve">
    <value>ภาพตัวอย่าง:</value>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>คำแนะนำ</value>
  </data>
  <data name="MainScreen" xml:space="preserve">
    <value>หน้าจอหลัก</value>
  </data>
  <data name="NoScreenShotSelected" xml:space="preserve">
    <value>ไม่มีหน้าจอเลือก</value>
  </data>
  <data name="NotNow" xml:space="preserve">
    <value>อย่าเพิ่ง</value>
  </data>
  <data name="PictureCounterOff" xml:space="preserve">
    <value>นับภาพปิด</value>
  </data>
  <data name="PictureCounterOn" xml:space="preserve">
    <value>เคาน์เตอร์รูปภาพบน</value>
  </data>
  <data name="PurchaseButton" xml:space="preserve">
    <value>ซื้อ</value>
  </data>
  <data name="RateButton" xml:space="preserve">
    <value>อัตรา</value>
  </data>
  <data name="SoundOff" xml:space="preserve">
    <value>เสียงปิด</value>
  </data>
  <data name="SoundOn" xml:space="preserve">
    <value>เสียงใน</value>
  </data>
  <data name="TrialExpired" xml:space="preserve">
    <value>ทดลองใช้หมดอายุ</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>ทดสอบ</value>
  </data>
  <data name="TakingPictureText" xml:space="preserve">
    <value>การถ่ายภาพ</value>
  </data>
</root>