<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>ko-KR</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>스파이 카메라</value>
  </data>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>추가</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>메뉴 항목</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>1 단계: 귀하의 휴대 전화에 어떤 스크린 샷을 촬영 하지 않은, 경우 스파이 카메라 셔터 버튼으로 사용 하는 스크린샷 걸릴 해야 합니다.  스크린 샷을 걸릴 동시에 홈 버튼과 전원 버튼을 누릅니다.  귀하의 휴대 전화에 응용 프로그램의 화면에서 스크린샷을 걸릴 수 있습니다.</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>2 단계: 구성 화면으로 이동 합니다.  사진을 찍을 수 있는 단추에 대 한 배경으로 사용 하고자 하는 화면을 선택 합니다.  또한이 화면에서 다른 카메라 설정을 구성할 수 있습니다.</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>3 단계: 주 화면으로 이동 합니다.  당신은 지금 당신의 screenshot을 보아야 한다.  사진의 찍을, 단순히 화면을 누릅니다. 이 일반적으로 본인이 전화 뿐만 아니라 초점 설정에 따라 약 1.5 초 걸립니다.</value>
  </data>
  <data name="Step4" xml:space="preserve">
    <value>4 단계: 당신의 사진을 보려면, 탭 하 고 왼쪽 이나 오른쪽 메인 화면에 슬라이드.  그림도 미디어 라이브러리에 저장 됩니다.</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>에 대 한</value>
  </data>
  <data name="BackCamera" xml:space="preserve">
    <value>후면 카메라</value>
  </data>
  <data name="BuyNow" xml:space="preserve">
    <value>지금 주문 하세요!</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>구성</value>
  </data>
  <data name="ExtendTrial" xml:space="preserve">
    <value>3 일에서 10 일 평가판을 확장,이 애플 리 케이 션 5 별을 평가 하 고 긍정적인 코멘트를 남겨 주세요.</value>
  </data>
  <data name="FlashOff" xml:space="preserve">
    <value>플래시 끄기</value>
  </data>
  <data name="FlashOn" xml:space="preserve">
    <value>에 플래시</value>
  </data>
  <data name="FocusOff" xml:space="preserve">
    <value>초점을 해제</value>
  </data>
  <data name="FocusOn" xml:space="preserve">
    <value>에 초점을</value>
  </data>
  <data name="FrontCamera" xml:space="preserve">
    <value>전면 카메라</value>
  </data>
  <data name="ImagePreview" xml:space="preserve">
    <value>이미지 미리 보기:</value>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>지침</value>
  </data>
  <data name="MainScreen" xml:space="preserve">
    <value>메인 화면</value>
  </data>
  <data name="NoScreenShotSelected" xml:space="preserve">
    <value>아니 스크린 샷을 선택</value>
  </data>
  <data name="NotNow" xml:space="preserve">
    <value>지금은 아니에요</value>
  </data>
  <data name="PictureCounterOff" xml:space="preserve">
    <value>떨어져 그림 카운터</value>
  </data>
  <data name="PictureCounterOn" xml:space="preserve">
    <value>그림 카운터에</value>
  </data>
  <data name="PurchaseButton" xml:space="preserve">
    <value>구매</value>
  </data>
  <data name="RateButton" xml:space="preserve">
    <value>속도</value>
  </data>
  <data name="SoundOff" xml:space="preserve">
    <value>소리 끄기</value>
  </data>
  <data name="SoundOn" xml:space="preserve">
    <value>소리에</value>
  </data>
  <data name="TrialExpired" xml:space="preserve">
    <value>평가판이 만료 되었습니다.</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>테스트</value>
  </data>
  <data name="TakingPictureText" xml:space="preserve">
    <value>사진을 찍을</value>
  </data>
</root>