<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>fr</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Caméra espion</value>
  </data>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Élément de menu</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>Étape 1: Si vous n'avez pas pris n'importe quel écran coups sur votre téléphone, vous devrez prendre une page-écran pour utiliser comme le déclencheur de l'appareil photo espion.  Pour prendre une capture d'écran, appuyez sur le bouton home et le bouton d'alimentation en même temps.  Vous pouvez prendre une page-écran de n'importe quel écran de n'importe quelle application sur votre téléphone.</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>Étape 2: Accédez à l'écran de configuration.  Choisissez la capture d'écran que vous souhaitez utiliser comme arrière-plan du bouton pour prendre des photos.  Vous pouvez également configurer les autres paramètres de la caméra sur l'écran.</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>Étape 3: Allez à l'écran principal.  Vous devriez maintenant voir votre capture d'écran.  Pour prendre une photo, il suffit de toucher l'écran. Cela prend généralement environ 1,5 secondes, selon les paramètres de mise au point, mais aussi quel téléphone que vous possédez.</value>
  </data>
  <data name="Step4" xml:space="preserve">
    <value>Étape 4: pour afficher votre image, appuyez sur et faites glisser vers la gauche ou la droite de l'écran principal.  Votre photo est également stockée dans votre médiathèque.</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Sur</value>
  </data>
  <data name="BackCamera" xml:space="preserve">
    <value>Caméra arrière</value>
  </data>
  <data name="BuyNow" xml:space="preserve">
    <value>Acheter maintenant !</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="ExtendTrial" xml:space="preserve">
    <value>Pour prolonger votre période d'essai de 3 jours à 10 jours, note cette étoiles app 5 et laissez un commentaire positif.</value>
  </data>
  <data name="FlashOff" xml:space="preserve">
    <value>Flash désactivé</value>
  </data>
  <data name="FlashOn" xml:space="preserve">
    <value>Flash sur</value>
  </data>
  <data name="FocusOff" xml:space="preserve">
    <value>Mettre l'accent sur</value>
  </data>
  <data name="FocusOn" xml:space="preserve">
    <value>Mettre l'accent sur</value>
  </data>
  <data name="FrontCamera" xml:space="preserve">
    <value>Caméra frontale</value>
  </data>
  <data name="ImagePreview" xml:space="preserve">
    <value>Aperçu de l'image :</value>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>Instructions</value>
  </data>
  <data name="MainScreen" xml:space="preserve">
    <value>Écran principal</value>
  </data>
  <data name="NoScreenShotSelected" xml:space="preserve">
    <value>Aucune capture d'écran ne sélectionné</value>
  </data>
  <data name="NotNow" xml:space="preserve">
    <value>Pas maintenant</value>
  </data>
  <data name="PictureCounterOff" xml:space="preserve">
    <value>Compteur de poses hors</value>
  </data>
  <data name="PictureCounterOn" xml:space="preserve">
    <value>Compteur de poses sur</value>
  </data>
  <data name="PurchaseButton" xml:space="preserve">
    <value>Achat</value>
  </data>
  <data name="RateButton" xml:space="preserve">
    <value>Taux</value>
  </data>
  <data name="SoundOff" xml:space="preserve">
    <value>Sound Off</value>
  </data>
  <data name="SoundOn" xml:space="preserve">
    <value>Sound sur</value>
  </data>
  <data name="TrialExpired" xml:space="preserve">
    <value>Procès a expiré.</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>test</value>
  </data>
  <data name="TakingPictureText" xml:space="preserve">
    <value>Prise de photo</value>
  </data>
</root>